// <auto-generated />
using Archery.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Archery.Migrations
{
    [DbContext(typeof(ArcheryVRContext))]
    partial class ArcheryVRContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Archery.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Nom")
                        .IsUnique()
                        .HasName("UQ__Grade__C7D1C61E128B661D")
                        .HasFilter("[Nom] IS NOT NULL");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("Archery.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BadAnswers")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("Difficult");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasMaxLength(400)
                        .IsUnicode(false);

                    b.Property<string>("GoodAnswers")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("GradeId")
                        .HasColumnName("GradeID");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(400)
                        .IsUnicode(false);

                    b.Property<int>("SujetId")
                        .HasColumnName("SujetID");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("SujetId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Archery.Models.Sujet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Nom")
                        .IsUnique()
                        .HasName("UQ__Sujet__C7D1C61E3B68B3AE")
                        .HasFilter("[Nom] IS NOT NULL");

                    b.ToTable("Sujet");
                });

            modelBuilder.Entity("Archery.Models.Question", b =>
                {
                    b.HasOne("Archery.Models.Grade", "Grade")
                        .WithMany("Question")
                        .HasForeignKey("GradeId")
                        .HasConstraintName("Question_FK_Grade");

                    b.HasOne("Archery.Models.Sujet", "Sujet")
                        .WithMany("Question")
                        .HasForeignKey("SujetId")
                        .HasConstraintName("Question_FK_Sujet");
                });
#pragma warning restore 612, 618
        }
    }
}
