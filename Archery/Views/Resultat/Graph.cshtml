@model IEnumerable<Archery.Models.Resultat>

@{
    ViewData["Title"] = "Graph";
}




<h1>Graph</h1>
<h2></h2>
<div class="container">
    <div class="row">
        @foreach (var lvl in ViewBag.LVL)
        {
            <div class="col-sm-6">
                <p class="lead">Résultat du niveau @lvl</p>
                <canvas id="level @lvl"></canvas>
                <br />
                </div>
        }
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
<script>

        var nbLvl = @ViewBag.LVL.Count ;
        var charts = [];

        var lvlArray = [];

        @foreach (var l in ViewBag.LVL )
        {
            @:lvlArray.push(@l);
        }

        var resArray = [];

        @foreach (var r in ViewBag.RES)
        {
            @:resArray.push(@Html.Raw(r));
        }

        var dateArray = [];

        @foreach (var dt in ViewBag.DATE )
        {
            @:dateArray.push(@Html.Raw(dt));
        }


        console.log(resArray);
        console.log(dateArray);
        for (var i = 0; i < nbLvl; i++) {

            var lvl = lvlArray[i] ;
            var ctx = document.getElementById('level ' + lvl).getContext('2d');

            console.log("boucle " + i + " / " + " lvl " + lvl);

            charts.push(new Chart(ctx, {
            // The type of chart we want to create
            type: 'line',

            // The data for our dataset
            data: {
                labels: dateArray[i]
                ,
                datasets: [{
                    label: 'Note (en %)',
                    backgroundColor: 'rgb(255, 99, 132)',
                    borderColor: 'rgb(255, 99, 132)',
                    data: resArray[i]
                }]
            },

            // Configuration options go here
            options: {}
            }));

        }



</script>

